// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Users {
  id       Int    @id @default(autoincrement()) 
  name     String @db.VarChar(50)
  email    String @db.VarChar(35)
  mobile   String @db.VarChar(15)
  username String @db.VarChar(50)
  password String @db.VarChar(50)
  fatherName String @db.VarChar(50) @default("N/A")
  motherName String @db.VarChar(50) @default("N/A")
  dob     DateTime @default(now()) 
  dobPlace String @db.VarChar(255)  @default("N/A")
  nid    String @db.VarChar(20)     @default("N/A")
  image String @db.VarChar(100)     @default("N/A")
  presentAddress String @db.VarChar(255)  @default("N/A")
  permanentAddress String @db.VarChar(255)  @default("N/A")
  active Boolean @default(true)
  role    String @db.VarChar(50) @default("user")

  paymentInfo PaymentInfo[] 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  AppliedForms AppliedForms[]
}

model Notices {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(100)
  description String   @db.VarChar(255)
  hyperlink   String?   @db.VarChar(100)
  cost        Float?    @db.Float @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())

  // applicationForms ApplicationForms? @relation(fields: [applicationFormsId], references: [id])
  // applicationFormsId Int?

  AppliedForms AppliedForms[]
}

model AppliedForms {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(100) //Applied Form Title
  description String?   @db.VarChar(255)
  hyperlink   String?   @db.VarChar(100)
  status      String?   @db.VarChar(50) @default("pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())

  users Users? @relation(fields: [usersId], references: [id])
  usersId Int?

  notices Notices? @relation(fields: [noticesId], references: [id])
  noticesId Int?

  applicationForms ApplicationForms? @relation(fields: [applicationFormsId], references: [id])
  applicationFormsId Int?

  subForms SubForms? @relation(fields: [subFormsId], references: [id])
  subFormsId Int?

  orgNOCInfo OrgNOCInfo? @relation(fields: [orgNOCInfoId], references: [id])
  orgNOCInfoId Int?

  paymentInfo PaymentInfo? @relation(fields: [paymentInfoId], references: [id])
  paymentInfoId Int?
}


model ApplicationForms {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(100)
  description String   @db.VarChar(255)
  hyperlink   String?   @db.VarChar(100)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())

  subForm     SubForms? @relation(fields: [subFormId], references: [id])
  subFormId   Int?

  // notices     Notices[]


  AppliedForms AppliedForms[]
}

model SubForms {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(100)
  description String   @db.VarChar(255)
  hyperlink   String?   @db.VarChar(100)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())

  applicationForms ApplicationForms[]

  AppliedForms AppliedForms[]
}


model NOCtypes {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(100)
  description String   @db.VarChar(255)
  hyperlink   String?   @db.VarChar(100)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())   

  orgNOCInfo OrgNOCInfo? @relation(fields: [orgNOCInfoId], references: [id])
  orgNOCInfoId Int?

}

model OrgNOCInfo {
  id          Int      @id @default(autoincrement())
  title       String?   @db.VarChar(100)
  description String?   @db.VarChar(255)
  hyperlink   String?   @db.VarChar(100)

  nocTypesTitle String?   @db.VarChar(100)
  orgName String?   @db.VarChar(100)
  orgAddress String?   @db.VarChar(255)
  orgEmail String?   @db.VarChar(35)
  orgMobile String?   @db.VarChar(15)
  applicantName String?   @db.VarChar(50)
  applicantPhone String?   @db.VarChar(35)
  expirationDate DateTime?  @default(now())

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())

  nocTypes NOCtypes[]
  nocTypesId Int?

  // payment 
  orgPaymentInfo PaymentInfo? @relation(fields: [orgPaymentInfoId], references: [id])
  orgPaymentInfoId Int?


  AppliedForms AppliedForms[]
}

model PaymentInfo {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(100)
  description String   @db.VarChar(255)
  hyperlink   String?   @db.VarChar(100)

  paymentType PaymentTypes? @relation(fields: [paymentTypesId], references: [id])
  paymentTypesId Int?

  paymentTypesTitle String?   @db.VarChar(100)
  vatAmount Float  @db.Float
  fees Float  @db.Float
  totalAmount Float  @db.Float

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())

  users Users? @relation(fields: [usersId], references: [id])
  usersId Int?

  orgNOCInfo OrgNOCInfo[]

  AppliedForms AppliedForms[]
}

model PaymentTypes {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(100)
  description String   @db.VarChar(255)
  hyperlink   String?   @db.VarChar(100)
  
  imageLink String?   @db.VarChar(100)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())

  paymentInfo PaymentInfo[]
}

model Images {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(100)
  description String?   @db.VarChar(255)
  hyperlink   String?   @db.VarChar(1000)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())
}